{"mappings":"kBACMA,EAAOC,SAASC,eAAe,YAC/BC,EAASF,SAASG,cAAc,sBAChCC,EAAWJ,SAASC,eAAe,YACvBD,SAASC,eAAe,aAI1CC,EAAOG,iBAAiB,SAAS,SAASC,GACxCA,EAAMC,iBAiBR,SAAiBC,EAAiBC,EAAaC,EAASC,EAAgBC,EAAeC,OACjFC,EAAAA,CACFN,gBAAAA,EACAC,YAAAA,EACAC,QAAAA,EACAC,eAAAA,EACAC,cAAAA,EACAC,iBAAAA,GAIFE,EAASC,KAAKF,GAQhB,SAAoBA,OACdG,EAAOjB,SAASkB,cAAc,MAClCD,EAAKE,UAAY,MAAQL,EAAKN,gBAAkB,OAEhDJ,EAASgB,YAAYH,OAGjBI,EAAYrB,SAASkB,cAAc,UACnCI,EAAgBtB,SAASuB,eAAe,UAC5CF,EAAUD,YAAYE,GACtBL,EAAKG,YAAYC,GAGjBA,EAAUhB,iBAAiB,SAAS,SAASC,GAC3CW,EAAKO,YAKPzB,EAAK0B,QAxBLC,CAAWZ,GAvBXa,CANW5B,EAAK6B,SAASd,KAAKe,OAG1BC,IAAYC,MAAQC,mBAAmB,SAGvB,aAAc,MAAA,CAAQ,IAAK,OAAO,GAGtDC,QAAQC,IAAInB,UAIVA,EAAAA","sources":["./public/solution.js"],"sourcesContent":["// Setting up variables for our HTML elements using DOM selection\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\"); // Complex CSS query\nconst tasklist = document.getElementById(\"tasklist\");\nconst taskInput = document.getElementById(\"taskInput\");\n\n// Event listener for Button click\n// This could also be form.addEventListener(\"submit\", function() {...} )\nbutton.addEventListener(\"click\", function(event) {\n  event.preventDefault(); // Not as necessary for button, but needed for form submit\n\n  let task = form.elements.task.value; // could be swapped out for line below\n  //let task = taskInput.value;\n\n  let date = (new Date()).toLocaleDateString('en-US') //Convert to short date format\n\n  // Call the addTask() function using\n  addTask(task, date, \"26/03/2021\", \"Low\", [\"1\", \"30\"], false);\n\n  // Log out the newly populated taskList everytime the button has been pressed\n  console.log(taskList);\n})\n\n// Create an empty array to store our tasks\nvar taskList = [];\n\nfunction addTask(taskDescription, createdDate, dueDate, priorityRating, estimatedTime, completionStatus) {\n  let task = {\n    taskDescription,\n    createdDate,\n    dueDate,\n    priorityRating,\n    estimatedTime,\n    completionStatus\n  };\n\n  // Add the task to our array of tasks\n  taskList.push(task);\n\n  // Separate the DOM manipulation from the object creation logic\n  renderTask(task);\n}\n\n\n// Function to display the item on the page\nfunction renderTask(task) {\n  let item = document.createElement(\"li\");\n  item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Setup delete button DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText = document.createTextNode(\"Delete\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton); // Adds a delete button to every task\n\n  // Listen for when the \n  delButton.addEventListener(\"click\", function(event){\n    item.remove(); // Remove the task item from the page when button clicked\n    // Because we used 'let' to define the item, this will always delete the right element\n  })\n  \n  // Clear the value of the input once the task has been added to the page\n  form.reset();\n}"],"names":["$8f10a9139210510f9e10347435578a1d$var$form","document","getElementById","$8f10a9139210510f9e10347435578a1d$var$button","querySelector","$8f10a9139210510f9e10347435578a1d$var$tasklist","addEventListener","event","preventDefault","taskDescription","createdDate","dueDate","priorityRating","estimatedTime","completionStatus","task","$8f10a9139210510f9e10347435578a1d$var$taskList","push","item","createElement","innerHTML","appendChild","delButton","delButtonText","createTextNode","remove","reset","$8f10a9139210510f9e10347435578a1d$var$renderTask","$8f10a9139210510f9e10347435578a1d$var$addTask","elements","value","date","Date","toLocaleDateString","console","log"],"version":3,"file":"index.HASH_REF_0bca4e5679d408c5390464ece192d856.js.map"}